on: [push, pull_request]

name: CI

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  msvc:
    name: MSVC
    strategy:
      fail-fast: false
      matrix:
        rust_version: [stable, 1.70.0]
        target:
          - x86_64-pc-windows-msvc
          - i686-pc-windows-msvc
          - aarch64-pc-windows-msvc

    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust_version }}
          targets: ${{ matrix.target }}

      - run: rustup component add rustfmt clippy
      - run: cargo fmt --all -- --check
      - run: cargo clippy --target ${{ matrix.target }} -- -D warnings

      - run: pip install "pefile==2024.8.26"
      - run: cargo build --verbose --release --target ${{ matrix.target }} --workspace

      # Runner is x86_64, can only run i686 and x86_64
      - if: contains(matrix.target, '86')
        run: cargo test --verbose --release --target ${{ matrix.target }}
      - if: contains(matrix.target, '86')
        run: cargo run --verbose --release --target ${{ matrix.target }} -- empty-resource.rc

      # Embed resources into a cross-compiled binary, and check.
      - run: python3 .github/workflows/msvc/test.py "target/${{ matrix.target }}/release/embed-resource-msvc-test.exe"
      - if: contains(matrix.target, '86')
        run: "target/${{ matrix.target }}/release/embed-resource-msvc-test.exe"

  linux_n_macOS:
    strategy:
      fail-fast: false
      matrix:
        rust_version: [stable, 1.70.0]
        os: [ubuntu-latest, macos-latest]

    name: Other - ${{ matrix.os }} - ${{ matrix.rust_version }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust_version }}
      - run: rustup component add rustfmt clippy

      - run: cargo fmt --all -- --check
      - run: cargo clippy --all-targets --all-features -- -D warnings
      - run: cargo build --verbose --release --workspace
      - run: cargo test --verbose --release

  mingw64:
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-pc-windows-gnu
    runs-on: windows-latest
    steps:
      - uses: dtolnay/rust-toolchain@stable
      - uses: actions/checkout@v4

      - name: Install 7zip
        run: choco install 7zip

      - name: Download and extract WinLibs GCC 15.1.0
        shell: cmd
        run: |
          curl -L -o winlibs-x86_64.zip "https://github.com/brechtsanders/winlibs_mingw/releases/download/15.1.0posix-13.0.0-ucrt-r2/winlibs-x86_64-posix-seh-gcc-15.1.0-mingw-w64ucrt-13.0.0-r2.zip"
          7z x winlibs-x86_64.zip -oC:\mingw64 -y
          echo C:\mingw64\mingw64\bin>>%GITHUB_PATH%
          echo CARGO_TARGET_X86_64_PC_WINDOWS_GNU_LINKER=C:\mingw64\mingw64\bin\gcc.exe>>%GITHUB_ENV%
          echo CC=C:\mingw64\mingw64\bin\gcc.exe>>%GITHUB_ENV%
          echo CXX=C:\mingw64\mingw64\bin\g++.exe>>%GITHUB_ENV%

      - name: Print GCC version and path
        shell: cmd
        run: |
          C:\mingw64\mingw64\bin\gcc.exe --version
          C:\mingw64\mingw64\bin\g++.exe --version
          echo %PATH%

      - name: Set MinGW-w64 as the default toolchain
        run: |
          rustup toolchain install stable-x86_64-pc-windows-gnu
          rustup default stable-x86_64-pc-windows-gnu

      - run: rustup target add ${{ matrix.target }}
      - run: rustup component add rustfmt clippy

      - run: pip install "pefile==2024.8.26"

      - run: cargo fmt --all -- --check
      - run: cargo clippy --target ${{ matrix.target }} -- -D warnings

      - run: cargo build --verbose --release --workspace --target ${{ matrix.target }}
      - run: cargo test --verbose --release --target ${{ matrix.target }}
      - run: cargo run --verbose --release --target ${{ matrix.target }} -- empty-resource.rc
      - run: python3 .github/workflows/msvc/test.py "target/${{ matrix.target }}/release/embed-resource-msvc-test.exe"
      - run: "target/${{ matrix.target }}/release/embed-resource-msvc-test.exe"
